@{
    ViewData["Title"] = "Dashboard 360 - " + ViewData["CardCode"];
}
    <div id="app_dashboard360">
        <div class="row">
            @*{{ BussinesPartner.information }}*@
        </div>
        <div v-if="BussinesPartner.information != null" class="row">
            <div class="col-lg-2 mg-t-30 mg-lg-t-0">
                <div class="card pd-20 pd-xs-30 shadow-base bd-0">
                    <h6 class="tx-gray-800 tx-uppercase tx-semibold tx-13 mg-b-25">Información de contacto</h6>
                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Cliente</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.cardName }}</p>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Correo de contacto</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.e_Mail }}</p>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Correo de facturación</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.e_MailL_invoice }}</p>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Correo de estados de cuenta</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.e_MailL_account }}</p>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Telefono(s)</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.phone2 }}</p>

                    <h6 class="tx-gray-800 tx-uppercase tx-semibold tx-13 mg-b-25">Facturación</h6>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Método de pago</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.descriptPayment }}</p>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Moneda</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.currency }}</p>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Monex USD</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.monexUSD }}</p>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Monex MXP</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.monexMXP }}</p>

                    <h6 class="tx-gray-800 tx-uppercase tx-semibold tx-13 mg-b-25">Grupo Splittel</h6>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Ejecutivo de ventas</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.slpName }}</p>

                    <label class="tx-10 tx-uppercase tx-mont tx-medium tx-spacing-1 mg-b-2">Correo del ejecutivo</label>
                    <p class="tx-info mg-b-15">{{ BussinesPartner.information.objeto.email_employeSales }}</p>

                </div><!-- card -->
            </div>
            <div class="col-lg-10 mg-t-30 mg-lg-t-0">
                <div class="row no-gutters widget-1 shadow-base">
                    <div class="col-sm-6 col-lg-3">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title">Linea de crédito</h6>
                            </div><!-- card-header -->
                            <div class="card-body">
                                <span id="spark1"><img src="https://img.icons8.com/ultraviolet/40/000000/bank-card-back-side.png"></span>
                                <span>${{ BussinesPartner.information.objeto.creditLine | formatPrice }} {{ BussinesPartner.information.objeto.currency }}</span>
                            </div><!-- card-body -->
                        </div><!-- card -->
                    </div>
                    <div class="col-sm-6 col-lg-3">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title">Saldo a favor</h6>
                            </div><!-- card-header -->
                            <div class="card-body">
                                <span id="spark1"><img src="https://img.icons8.com/ultraviolet/40/000000/bank-card-back-side.png"></span>
                                <span>${{ BussinesPartner.information.objeto.balance | formatPrice }} {{ BussinesPartner.information.objeto.currency }}</span>
                            </div><!-- card-body -->
                        </div><!-- card -->
                    </div>
                    <div class="col-sm-6 col-lg-3">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title">Dias extras</h6>
                            </div><!-- card-header -->
                            <div class="card-body">
                                <span id="spark1"><img src="https://img.icons8.com/ultraviolet/40/000000/bank-card-back-side.png"></span>
                                <span>{{ BussinesPartner.information.objeto.extraDays }}</span>
                            </div><!-- card-body -->
                        </div><!-- card -->
                    </div>
                    <div class="col-sm-6 col-lg-3">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title">Sección</h6>
                            </div><!-- card-header -->
                            <div class="card-body">
                                <span id="spark1"><img src="https://img.icons8.com/ultraviolet/40/000000/low-price.png"></span>
                                <span>{{ BussinesPartner.information.objeto.section }} </span>
                            </div><!-- card-body -->
                        </div><!-- card -->
                    </div>
                </div>
                <div class="row no-gutters widget-1 shadow-base mt-2">
                    <div class="col-xl-6 ">
                        <div class="bd pd-20 card border">
                            <h6 class="tx-gray-800 tx-uppercase tx-bold tx-14 mg-b-10">Top 5 de productos por precio</h6>
                            <div v-if="ArtculosTopPrice.isGettingInformation == false" id="articulos_top_price" class="ht-200 ht-sm-300"></div>
                            <div v-else>Obteniendo articulos</div>
                       </div>
                    </div><!-- col-6 -->
                    <div class="col-xl-6 ">
                        <div class="bd pd-20 card border">
                            <h6 class="tx-gray-800 tx-uppercase tx-bold tx-14 mg-b-10">Top 5 de productos por cantidad</h6>
                            <div v-if="ArtculosTopQuantity.isGettingInformation == false" id="articulos_top_quantity" class="ht-200 ht-sm-300"></div>
                            <div v-else>Obteniendo articulos</div>
                        </div>
                    </div><!-- col-6 -->
                </div><!-- row -->
            </div>
        </div>
        <div v-else>
            <div class="alert alert-danger alert-bordered pd-y-20" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <div class="d-flex align-items-center justify-content-start">
                    <i class="icon ion-ios-close alert-icon tx-52 tx-danger mg-r-20"></i>
                    <div>
                        <h5 class="mg-b-2 tx-danger">Cliente [@ViewData["CardCode"]] no encotrado.</h5>
                        <p class="mg-b-0 tx-gray">por favor selecciona un codigo de cliente valido...</p>
                    </div>
                </div><!-- d-flex -->
            </div><!-- alert -->
        </div>
    </div>

@section Scripts {
    <script>
        var App_dashboard360 = new Vue({
            el: "#app_dashboard360",
            data:
            {
                BussinesPartner:
                {
                    cardCode: "@ViewData["CardCode"]",
                    information: null,
                    isGettingInformation: true
                },
                ArtculosTopPrice: {
                    informacion: null,
                    isGettingInformation: true,
                },
                ArtculosTopQuantity: {
                    informacion: null,
                    isGettingInformation: true,
                }
            },
            async mounted()
            {
                await this.GetBussinesPartner(this.BussinesPartner.cardCode);
                await this.GetarticulosTopPrice();
                await this.GetarticulosTopQuantity();
                setTimeout(this.ShowTopPrice(), 3000);
                setTimeout(this.ShowTopQuantity(), 3000);
            },
            async updated()
            {
              
            },
            methods:
            {
                GetBussinesPartner: async function (CardCode)
                {
                    RequestVerificationToken = document.querySelector("input[name=__RequestVerificationToken]").value
                    const headers = {
                        'Content-Type': 'multipart/form-data',
                        'RequestVerificationToken': RequestVerificationToken
                    }
                    let params = new FormData();
                        params.append('CardCode', CardCode);
                    await axios.post('@Url.Action("DataGetBussinesPartner","BussinesPartner")',params,{headers: headers}).then(response => {
                        this.BussinesPartner.information = response.data;
                    }).catch(error => {
                        alert(error.response.data);
                    }).finally(() => this.BussinesPartner.isGettingInformation = false);
                },
                GetarticulosTopPrice: async function () {
                    RequestVerificationToken = document.querySelector("input[name=__RequestVerificationToken]").value
                    const headers = {
                        'Content-Type': 'multipart/form-data',
                        'RequestVerificationToken': RequestVerificationToken
                    }
                    let params = new FormData();
                        params.append('CardCode', this.BussinesPartner.cardCode);
                    await axios.post('@Url.Action("DataGetArticulosTopByPrice","BussinesPartner")',params,{headers: headers}).then(response => {
                        this.ArtculosTopPrice.information = response.data;
                    }).catch(error => {
                        alert(error.response.data);
                    }).finally(() => this.ArtculosTopPrice.isGettingInformation = false);
                },
                GetarticulosTopQuantity: async function () {
                    RequestVerificationToken = document.querySelector("input[name=__RequestVerificationToken]").value
                    const headers = {
                        'Content-Type': 'multipart/form-data',
                        'RequestVerificationToken': RequestVerificationToken
                    }
                    let params = new FormData();
                        params.append('CardCode', this.BussinesPartner.cardCode);
                    await axios.post('@Url.Action("DataGetArticulosTopByQuantity","BussinesPartner")',params,{headers: headers}).then(response => {
                        this.ArtculosTopQuantity.information = response.data;
                    }).catch(error => {
                        alert(error.response.data);
                    }).finally(() => this.ArtculosTopQuantity.isGettingInformation = false);
                },
                ShowTopPrice: function () {
                    if (this.ArtculosTopPrice.information != null || this.ArtculosTopPrice.information.records != undefined) {
                        console.log("generando chart");
                        let colors = ['#9A3267', '#ED4151', '#F89D44', '#85C441', '#36B3E3'];
                        let piedata = [];
                        this.ArtculosTopPrice.information.records.forEach((data, index) => {
                            piedata.push({ label: data.description, data: [[1,data.unitPrice]], color: colors[index]});
                        });
                        this.PieChart(piedata, "#articulos_top_price");
                    }
                    
                },
                ShowTopQuantity: function () {
                    if (this.ArtculosTopQuantity.information != null || this.ArtculosTopQuantity.information.records != undefined) {
                        console.log("generando chart");
                        let colors = ['#9A3267', '#ED4151', '#F89D44', '#85C441', '#36B3E3'];

                        let piedata = [];
                        this.ArtculosTopQuantity.information.records.forEach((data, index) => {
                            piedata.push({ label: data.description, data: [[1,data.quantity]], color: colors[index]});
                        });
                        this.PieChart(piedata, "#articulos_top_quantity");
                    }
                    
                },
                PieChart: function (piedata, id) {
                    $.plot(id, piedata, {
                      series: {
                        pie: {
                          show: true,
                          radius: 1,
                          label: {
                            show: true,
                            radius: 2/3,
                            formatter: this.labelFormatter,
                            threshold: 0.1
                          }
                        }
                      },
                      grid: {
                        hoverable: true,
                        clickable: true
                      }
                    });
                },
                labelFormatter: function labelFormatter(label, series) {
		            return "<div style='font-size:8pt; text-align:center; padding:2px; color:white;'>" + Math.round(series.percent) + "%</div>";
	            }
            },
            filters: {
                formatPrice: function (value) {
                    let val = (value / 1).toFixed(2).replace('.', ',')
                    return val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".")
                },
            }
            
        });
    </script>
}